#Run using snakemake -j1 --latency-wait 120 --use-conda


#Dependancies to be used 
#conda env export --from-history > environment.yaml
#conda env create --name testenv --file environment.yaml


import os
import os.path



##### Load Input Files and usefull info  #####


DATASETS={}
DATASETS_FILE=open('Datasets.txt','r')

Labels=DATASETS_FILE.readline()
counter=1
for line in DATASETS_FILE:
    line=line.strip().split()
    Dataset=line[0]
    AncSamples=line[1].split(',')
    
    
    if Dataset in DATASETS:
        DATASETS[Dataset].append([x for x in AncSamples])

    else:
        DATASETS[Dataset]=[[x for x in AncSamples]]
        
        
print(DATASETS)

JOINED_NAMES=[]
for DATASET,ANC_SAMPLES in DATASETS.items():
    for SAMPLES in ANC_SAMPLES:
        JOINED_NAMES.append('-'.join([DATASET,'-'.join(SAMPLES)]))

    
#######################################################################################################################################################################
#######################################################################################################################################################################
#######################################################################################################################################################################
## Starting Rule




rule all:
    input:
        expand("Workspace/1_OG_Dataset/{DATASETS}.info",DATASETS=DATASETS.keys()),
        [ 'Workspace/2_GENES/Genes_{}.txt'.format(x) for x in JOINED_NAMES ]




#######################################################################################################################################################################
## Dataset Pipeline ##


#Organise Datasets
rule Organise_Data:
    input:
        "Datasets.txt"
    output:
        expand("Workspace/1_OG_Dataset/{DATASETS}.info",DATASETS=DATASETS.keys())
    run:
        
        for DATASET,ANC_SAMPLES in DATASETS.items():
            for SAMPLES in ANC_SAMPLES:
                shell("""echo '{}' >>  Workspace/1_OG_Dataset/{}.info;""".format(','.join(SAMPLES),DATASET)) #append all versions of analysis
 



#Create a Genes folder for every dataset
#
rule Create_Genes_Folders:
    input:
        "Datasets.txt"
    output:
        [ 'Workspace/2_GENES/Genes_{}.txt'.format(x) for x in JOINED_NAMES ]
    run:
        for DATASET,ANC_SAMPLES in DATASETS.items():
            for SAMPLES in ANC_SAMPLES:

                if isinstance(SAMPLES, list) is True:
                    print(SAMPLES)
                    for SAMPLE in SAMPLES:
                        print(SAMPLE)
                        shell("""SAMPLE_NAME={}; REF='Workspace/1_OG_Dataset/{}'; grep ">"$SAMPLE_NAME $REF | rev | cut -f 1 -d "_" | rev |cut -f 1 -d ">" |cut -f 1 -d '/' > TMP;""".format(SAMPLE,DATASET))
                        
                if isinstance(SAMPLES, list) is False:
                    print(SAMPLES)
                    shell("""SAMPLE_NAME={}; REF='Workspace/1_OG_Dataset/{}'; grep ">"$SAMPLE_NAME $REF | rev | cut -f 1 -d "_" | rev |cut -f 1 -d ">" |cut -f 1 -d '/' > TMP;""".format(SAMPLES,DATASET))
                
                shell("""cat TMP | sort | uniq > Workspace/2_GENES/Genes_{}.txt;""".format('-'.join([DATASET,'-'.join(SAMPLES)])))
                shell("""rm TMP;""")
