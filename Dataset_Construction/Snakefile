##### Load Input Files and usefull info  #####

SAMPLES=[]
SAMPLE_FILE=open('Samples.txt','r')
for line in SAMPLE_FILE:
    SAMPLES.append(line.strip())
print(SAMPLES)


CHROMOSOMES=[]
GENE_LOCS=open("Gene_locs.txt","r")
for line in GENE_LOCS:
    line=line.strip().split()
    CHROMOSOMES.append(line[1])
print(CHROMOSOMES)
CHROMOSOMES=list(set(CHROMOSOMES))
CHROMOSOMES.sort()
print(CHROMOSOMES)

#######################################################################################################################################################################
## Starting Rule

rule all:
    input:
        expand("BAM_FILES/{sample}_FRMT_{CHR}.fa.gz",CHR=CHROMOSOMES,sample=SAMPLES)
        
        
        
        
        
#######################################################################################################################################################################
## Data Pipeline ##


#Make sure bam file has correct chromosome naming scheme

rule format_name:
    input:
        "BAM_FILES/{sample}.bam"
    output:
        "BAM_FILES/{sample}_FRMT.bam"
    shell: 
        """samtools view -H {input} |\
        sed -e 's/SN:1/SN:chr1/' | sed -e 's/SN:2/SN:chr2/' | \
        sed -e 's/SN:3/SN:chr3/' | sed -e 's/SN:4/SN:chr4/' | \
        sed -e 's/SN:5/SN:chr5/' | sed -e 's/SN:6/SN:chr6/' | \
        sed -e 's/SN:7/SN:chr7/' | sed -e 's/SN:8/SN:chr8/' | \
        sed -e 's/SN:9/SN:chr9/' | sed -e 's/SN:10/SN:chr10/' | \
        sed -e 's/SN:11/SN:chr11/' | sed -e 's/SN:12/SN:chr12/' | \
        sed -e 's/SN:13/SN:chr13/' | sed -e 's/SN:14/SN:chr14/' | \
        sed -e 's/SN:15/SN:chr15/' | sed -e 's/SN:16/SN:chr16/' | \
        sed -e 's/SN:17/SN:chr17/' | sed -e 's/SN:18/SN:chr18/' | \
        sed -e 's/SN:19/SN:chr19/' | sed -e 's/SN:20/SN:chr20/' | \
        sed -e 's/SN:21/SN:chr21/' | sed -e 's/SN:22/SN:chr22/' | \
        sed -e 's/SN:X/SN:chrX/' | sed -e 's/SN:Y/SN:chrY/' | \
        sed -e 's/SN:MT/SN:chrM/' | samtools reheader - {input} > {output}"""


#Re Index it
rule format_index_name:
    input:
        "BAM_FILES/{sample}_FRMT.bam"
    output:
        "BAM_FILES/{sample}_FRMT.bam.bai"
    shell:
        "samtools index -b {input}"


#Split it into target chromosomes
rule format_split_into_chromosomes:
    input:
        BAM=expand("BAM_FILES/{sample}_FRMT.bam",sample=SAMPLES),
        BAI=expand("BAM_FILES/{sample}_FRMT.bam.bai",sample=SAMPLES),
        GENE_LOCS="Gene_locs.txt",
    output:
        expand("BAM_FILES/{sample}_FRMT_{CHR}.bam", CHR=CHROMOSOMES,sample=SAMPLES),
        expand("BAM_FILES/{sample}_FRMT_{CHR}.bam.bai", CHR=CHROMOSOMES,sample=SAMPLES)
    run:
        COMMANDS1=expand("""samtools view -b BAM_FILES/{sample}_FRMT.bam chr{CHR} > BAM_FILES/{sample}_FRMT_{CHR}.bam; """,CHR=CHROMOSOMES,sample=SAMPLES)
        COMMANDS2=expand("""samtools index -b BAM_FILES/{sample}_FRMT_{CHR}.bam;  """,CHR=CHROMOSOMES,sample=SAMPLES)
        
        for CMD in COMMANDS1:
            shell(CMD)
        for CMD2 in COMMANDS2:
            shell(CMD2)


#####
#Maybe add another formating step here for samples that are already split into chromosomes
##
# def get_split_chroms_or_formatted_whole(wcs):
    # if:
        # return input1
    # if:
        # return input2
        

# rule format_split_into_chromosomes:
    # input:
        # BAM=get_split_chroms_or_formatted_whole,
        # GENE_LOCS="Gene_locs.txt",
    # output:
        # expand("BAM_FILES/DENISOVA_DENISOVA_ADNA_FRMT_{CHR}.bam", CHR=CHROMOSOMES)
    # run:
        # if input1:
            # NAME=input.BAM[:-4]
            # for CHR in CHROMOSOMES:
                # shell("""samtools view -b {} chr{} > {}_{}.bam; """.format(input.BAM,CHR,NAME,CHR))
        # if input2:
            # for CHR in CHROMOSOMES:
####

#Use ANGSD to transform to fasta
rule from_bam_to_fasta_ANGSD:
    input:
        expand("BAM_FILES/{sample}_FRMT_{CHR}.bam",CHR=CHROMOSOMES,sample=SAMPLES),
        expand("BAM_FILES/{sample}_FRMT_{CHR}.bam.bai",CHR=CHROMOSOMES,sample=SAMPLES)
    output:
        expand("BAM_FILES/{sample}_FRMT_{CHR}.fa.gz",CHR=CHROMOSOMES,sample=SAMPLES)

    run:
        COMMANDS=expand("""angsd -minQ 20 -minMapQ 30 -doFasta 2 -doCounts 1 -basesPerLine 60 -i BAM_FILES/{sample}_FRMT_{CHR}.bam -r chr{CHR} -out BAM_FILES/{sample}_FRMT_{CHR};""",CHR=CHROMOSOMES,sample=SAMPLES)
        for CMD in COMMANDS:
            shell(CMD)


#######################################################################################################################################################################
##Actual DNA to Proteins Translation ##

#Use custom R script
